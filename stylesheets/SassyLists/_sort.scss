// Sorts values of $list
// -------------------------------------------------------------------------------
// @documentation http://sassylists.com/documentation/#sort
// -------------------------------------------------------------------------------
// @dependence `compare()`
// @dependence `last()`
// @dependence `insert-nth()`
// -------------------------------------------------------------------------------
// @example sort(5 12 4.7 6 69 6)          => 4.7, 5, 6, 6, 12, 69
// @example sort(5 12 4.7 "8" 6 14px 69 6) => 4.7, 5, 6, 6, 12, 69
// -------------------------------------------------------------------------------
// @param $list [List] : list
// -------------------------------------------------------------------------------
// @raise [Warning] if nested list found
// -------------------------------------------------------------------------------
// @return [List]

@function sort($list, $matrix: null) {
    @if dependencies("_compare", "last", "insert-nth") {
        $result: nth($list, 1);
        $matrix: if($matrix != null, $matrix, 
            " " "!" "\"" "#" "$" "%" "&" "'" "(" ")" "*" "+" "," "-" "." "/" ":" ";" "<" "=" ">" "?" "@" "[" "\\" "]" "^" "_"
            "0" "1" "2" "3" "4" "5" "6" "7" "8" "9" 
            "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z"
        );

        @for $i from 2 through length($list) {
            $item: nth($list, $i);

            @if length($item) == 1 {
                @if not _compare($item, last($result), $matrix) {
                    $result: append($result, $item, list-separator($list));
                }

                @else {
                    $index: 1;
                    
                    @for $j from length($result) * -1 through -1 {
                        @if _compare($item, nth($result, abs($j)), $matrix) {
                            $index: abs($j);
                        }
                    }

                    $result: insert-nth($result, $index, $item);
                }
            }

            @else {
                @warn "List found. Omitted.";
            }
        }

        @return $result;
    }

    @else {
        @warn "A function is missing for `sort`. Please make sure you're including all dependencies.";
        @return false;
    }
}
