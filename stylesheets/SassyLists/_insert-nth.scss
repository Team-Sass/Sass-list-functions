// Adds $value at $index in $list
// -------------------------------------------------------------------------------
// @documentation http://sassylists.com/documentation/#insert-nth
// -------------------------------------------------------------------------------
// @example insert-nth(a b c,  2, z) => a z b c
// @example insert-nth(a b c,  0, z) => error
// @example insert-nth(a b c, -1, z) => error
// @example insert-nth(a b c, 10, z) => error
// -------------------------------------------------------------------------------
// @param $list [List] : list
// @param $index [Number] : index to add
// @param $value [Literal] : value to add
// -------------------------------------------------------------------------------
// @raise [Error] if $list is a map
// @raise [Error] if $index isn't an integer
// @raise [Error] if $index is strictly lesser than 1
// @raise [Error] if $index is strictly greater than length of $list
// -------------------------------------------------------------------------------
// @return [List] | false

@function insert-nth($list, $index, $value) {
    $result: false;

    @if type-of($list) == map {
        @warn "List expected for `insert-nth`, map given.";
        @return $result;
    }

    @if type-of($index) != number {
        @warn "List index #{$index} is not a number for `insert-nth`.";
        @return $result;
    }

    @else if $index < 1 {
        @warn "List index #{$index} must be a non-zero integer for `insert-nth`";
        @return $result;
    }

    @else if $index > length($list) {
        @return append($list, $value);
    }

    @else if abs($index) > length($list) {
        @warn "List index is #{$index} but list is only #{length($list)} items long for `insert-nth'.";
        @return $result;
    }

    @else {
        $result: ();
        $index: if($index < 0, length($list) + $index + 1, $index);
        
        @for $i from 1 through length($list) {
            @if $i == $index {
                @if true($value) {
                    $result: append($result, $value);
                }
            }
            
            $result: append($result, nth($list, $i), list-separator($list));
        }
                
    }

    @return $result;
}
