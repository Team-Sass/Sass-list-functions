/** 
 * Add $value at $index in $list
 * -------------------------------------------------------------------------------
 * @dependence `purge()`
 * -------------------------------------------------------------------------------
 * @example insert-nth( (a, b, c),  2, z ) => a, z, b, c
 * @example insert-nth( (a, b, c),  0, z ) => error
 * @example insert-nth( (a, b, c), -1, z ) => error
 * @example insert-nth( (a, b, c), 10, z ) => error
 * -------------------------------------------------------------------------------
 * @param $list [List] : list
 * @param $index [Number] : index to add
 * @param $value [Literal] : value to add
 * -------------------------------------------------------------------------------
 * @raise [Error] if $index isn't an integer
 * @raise [Error] if $index is strictly lesser than 1
 * @raise [Error] if $index is strictly greater than length of $list
 * -------------------------------------------------------------------------------
 * @return [List] | false
 */
@function insert-nth($list, $index, $value) {
  $result: false;
      
  @if type-of($index) != number {
    @warn "$index: #{quote($index)} is not a number for `insert-nth`.";
    @return $result;
  }

  @else if $index < 1 {
    @warn "List index 0 must be a non-zero integer for `insert-nth`";
    @return $result;
  }

  @else if $index > length($list) {
    @warn "List index is #{$index} but list is only #{length($list)} item long for `insert-nth'.";
    @return $result;
  }

  @else {
    $result: ();
        
    @for $i from 1 through length($list) {
      @if $i == $index {
        $result: append($result, $value);
      }

      $result: append($result, nth($list, $i));
    }
  }

  @return purge($result);
}